C51 COMPILER V9.01   INIT                                                                  08/07/2021 09:31:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN .\build\init.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main\init.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(..\..\libraries;.
                    -.\..\libraries\core;..\..\libraries\core\register\STC8x;..\..\libraries\core\startup\STC8x;..\..\libraries\drives;..\..\
                    -libraries\drives\KeyScan;..\..\libraries\peripherals;..\..\libraries\peripherals\STC8x\inc;..\..\libraries\peripherals\S
                    -TC8x\src;..\..\libraries\components;..\..\libraries\components\TMT;..\..\libraries\components\PrintfRed;..\..\libraries\
                    -components\PreDelay;.\main;.\application) DEBUG PRINT(.\build\init.lst) OBJECT(.\build\init.obj)

line level    source

   1          /*-----------------------------------------------------------------------
   2          |                            FILE DESCRIPTION                           |
   3          -----------------------------------------------------------------------*/
   4          /*----------------------------------------------------------------------
   5            - File name     : init.c
   6            - Author        : zeweni
   7            - Update date   : 2020.01.11
   8            -     Copyright(C)  : 2020-2021 zeweni. All rights reserved.
   9          -----------------------------------------------------------------------*/
  10          /*-----------------------------------------------------------------------
  11          |                               INCLUDES                                |
  12          -----------------------------------------------------------------------*/
  13          #include "main.h"
  14          /*-----------------------------------------------------------------------
  15          |                                 DATA                                  |
  16          -----------------------------------------------------------------------*/
  17          
  18          /*--------------------------------------------------------
  19          | @Description: MCU peripheral initialization function   |
  20          --------------------------------------------------------*/
  21          
  22          static void STC8x_SYSCLK_Config(void);
  23          static void STC8x_UART_Config(void);
  24          static void STC8x_GPIO_Config(void);
  25          static void STC8x_TIMER0_Config(void);
  26          static void STC8x_TIMER2_Config(void);
  27          static void STC8x_EXTI_Config(void);
  28          static void STC8x_ADC_Config(void);
  29          /*-----------------------------------------------------------------------
  30          |                               FUNCTION                                |
  31          -----------------------------------------------------------------------*/
  32          
  33          /**
  34            * @name    STC8x_System_Init
  35            * @brief   MCU initialization function
  36            * @param   None
  37            * @return  None
  38          ***/
  39          void STC8x_System_Init(void)
  40          {
  41   1          DELAY_POS(); /* Power on stability delay */
  42   1          STC8x_SYSCLK_Config(); /* Initialize system clock */
  43   1          delay_init();
  44   1          STC8x_GPIO_Config();
  45   1          STC8x_UART_Config();
  46   1          STC8x_TIMER0_Config();
  47   1          //STC8x_TIMER2_Config();
  48   1          STC8x_ADC_Config();
  49   1          STC8x_EXTI_Config();
  50   1          /*
  51   1              Add hardware driver initialization code here.
C51 COMPILER V9.01   INIT                                                                  08/07/2021 09:31:09 PAGE 2   

  52   1          */
  53   1          NVIC_GLOBAL_ENABLE();
  54   1      }
  55          
  56          /**
  57            * @name    STC8x_SYSCLK_Config
  58            * @brief   MCU SYSCLK initialization function
  59            * @param   None
  60            * @return  None
  61          ***/
  62          static void STC8x_SYSCLK_Config(void)
  63          {
  64   1          SYSCLK_InitType SYSCLK_InitStruct= {0}; /* Declare structure */
  65   1          SYSCLK_InitStruct.MCLKSrc = AUTO;
  66   1          SYSCLK_InitStruct.SCLKDiv = 0; /* if SCLKDiv = 0, Not output */
  67   1          SYSCLK_InitStruct.SCLKOutPin = SCLK_OUT_P16;
  68   1          SYSCLK_Init(&SYSCLK_InitStruct);
  69   1      }
  70          
  71          /**
  72            * @name    STC8x_GPIO_Config
  73            * @brief   MCU GPIO initialization function
  74            * @param   None
  75            * @return  None
  76          ***/
  77          static void STC8x_GPIO_Config(void)
  78          {
  79   1          GPIO_MODE_OUT_PP(GPIO_P1,Pin_0);            //输出          用      推挽输出
  80   1          GPIO_MODE_OUT_PP(GPIO_P1,Pin_1);            //输出          用      推挽输出
  81   1          GPIO_MODE_OUT_PP(GPIO_P1,Pin_6);            //输出          用      推挽输出
  82   1          GPIO_MODE_OUT_PP(GPIO_P1,Pin_7);            //输出          用      推挽输出
  83   1      
  84   1          GPIO_MODE_WEAK_PULL(GPIO_P5,Pin_5);         //按键          用      准双向IO口
  85   1      
  86   1          GPIO_MODE_WEAK_PULL(GPIO_P3,Pin_7);         //投切检测      用      准双向IO口
  87   1                      
  88   1              RST_P54_ENABLE();
  89   1          /* Run lamp */
  90   1      }
  91          
  92          /**
  93            * @name    STC8x_TIMER0_Config
  94            * @brief   MCU TIMER0 initialization function
  95            * @param   None
  96            * @return  None
  97          ***/
  98          static void STC8x_TIMER0_Config(void)
  99          {
 100   1          TIMER_InitType TIMER_InitStruct= {0};
 101   1          TIMER_InitStruct.Mode = TIMER_16BitAutoReload;
 102   1          TIMER_InitStruct.Time = 1000;     //1ms
 103   1          TIMER_InitStruct.Run = ENABLE;
 104   1          TIMER0_Init(&TIMER_InitStruct);
 105   1          NVIC_TIMER0_Init(NVIC_PR2,ENABLE);
 106   1      }
 107          
 108          /**
 109            * @name    STC8x_TIMER2_Config
 110            * @brief   MCU TIMER2 initialization function
 111            * @param   None
 112            * @return  None
 113          ***/
C51 COMPILER V9.01   INIT                                                                  08/07/2021 09:31:09 PAGE 3   

 114          static void STC8x_TIMER2_Config(void)
 115          {
 116   1          TIMER_InitType TIMER_InitStruct= {0};
 117   1      
 118   1          TIMER_InitStruct.Mode = TIMER_16BitAutoReload;
 119   1          TIMER_InitStruct.Time = 100;     //0.1ms
 120   1          TIMER_InitStruct.Run = ENABLE;
 121   1          TIMER2_Init(&TIMER_InitStruct);
 122   1          NVIC_TIMER2_Init(ENABLE);
 123   1      }
 124          
 125          /**
 126            * @name    STC8x_UART_Config
 127            * @brief   MCU UART initialization function
 128            * @param   None
 129            * @return  None
 130          ***/
 131          static void STC8x_UART_Config(void)
 132          {
 133   1          UART_InitType UART_InitStruct = {0};
 134   1      
 135   1          /* UART1 TXD */
 136   1          GPIO_MODE_OUT_PP(GPIO_P3,Pin_1);
 137   1          /* UART1 RXD */
 138   1          GPIO_MODE_IN_FLOATING(GPIO_P3,Pin_0);
 139   1      
 140   1          UART_InitStruct.Mode = UART_8bit_BRTx;
 141   1          UART_InitStruct.BRTGen = UART_BRT_TIM1;
 142   1          UART_InitStruct.BRTMode = UART_BRT_1T;
 143   1          UART_InitStruct.BaudRate = 9600;
 144   1          UART_InitStruct.RxEnable = ENABLE;
 145   1          UART1_Init(&UART_InitStruct);
 146   1          NVIC_UART1_Init(NVIC_PR0,ENABLE);
 147   1      }
 148          
 149          /**
 150            * @name    STC8x_EXTI_Config
 151            * @brief   MCU EXTI initialization function
 152            * @param   None
 153            * @return  None
 154          ***/
 155          static void STC8x_EXTI_Config(void)
 156          {
 157   1          //在GPIO_MODE_IN_FLOATING模式下，IO口依然可以检测外部电平0or1
 158   1              GPIO_MODE_IN_FLOATING(GPIO_P3,Pin_2);
 159   1          NVIC_EXTI0_Init(EXTI_Tri_Edge,NVIC_PR1,ENABLE);
 160   1          GPIO_MODE_IN_FLOATING(GPIO_P3,Pin_3);
 161   1          NVIC_EXTI1_Init(EXTI_Tri_Edge,NVIC_PR1,ENABLE);
 162   1      }
 163          
 164          /**
 165            * @name    STC8x_ADC_Config
 166            * @brief   MCU ADC initialization function
 167            * @param   None
 168            * @return  None
 169          ***/
 170          static void STC8x_ADC_Config(void)
 171          {
 172   1          ADC_InitType ADC_InitStruct = {0};
 173   1          GPIO_MODE_IN_FLOATING(GPIO_P3,Pin_6);
 174   1          ADC_InitStruct.Power = ENABLE;                                              // ADC power control bit
 175   1          ADC_InitStruct.Channel = ADC_Channel_P36_8G1K08_T;  // ADC channel selection
C51 COMPILER V9.01   INIT                                                                  08/07/2021 09:31:09 PAGE 4   

 176   1          ADC_InitStruct.Speed = 0X0F;                                                // The maximum ADC conversion speed (working clock frequency) is 0x
             -0f
 177   1          ADC_InitStruct.Align = ADC_Right;                                   // ADC data format alignment
 178   1          ADC_InitStruct.Run = ENABLE;                                                //  ADC conversion operation control bit
 179   1          ADC_Init(&ADC_InitStruct);
 180   1          //NVIC_ADC_Init(NVIC_PR0,ENABLE);                                   //不启用中断
 181   1      }
 182          
 183          /*-----------------------------------------------------------------------
 184          |                   END OF FLIE.  (C) COPYRIGHT zeweni                  |
 185          -----------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
