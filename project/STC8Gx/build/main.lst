C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main\main.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(..\..\libraries;.
                    -.\..\libraries\core;..\..\libraries\core\register\STC8x;..\..\libraries\core\startup\STC8x;..\..\libraries\drives;..\..\
                    -libraries\drives\KeyScan;..\..\libraries\peripherals;..\..\libraries\peripherals\STC8x\inc;..\..\libraries\peripherals\S
                    -TC8x\src;..\..\libraries\components;..\..\libraries\components\TMT;..\..\libraries\components\PrintfRed;..\..\libraries\
                    -components\PreDelay;.\main;.\application) DEBUG PRINT(.\build\main.lst) OBJECT(.\build\main.obj)

line level    source

   1          /*-----------------------------------------------------------------------
   2          |                            FILE DESCRIPTION                           |
   3          -----------------------------------------------------------------------*/
   4          /*----------------------------------------------------------------------
   5            - File name     : main.c
   6            - Author        : zeweni
   7            - Update date   : 2020.01.11
   8            -     Copyright(C)  : 2020-2021 zeweni. All rights reserved.
   9          -----------------------------------------------------------------------*/
  10          /*-----------------------------------------------------------------------
  11          |                               INCLUDES                                |
  12          -----------------------------------------------------------------------*/
  13          #include "main.h"
  14          #include "intrins.h"
  15          /*-----------------------------------------------------------------------
  16          |                                 DATA                                  |
  17          -----------------------------------------------------------------------*/
  18          
  19          /*-----------------------------------------------------------------------
  20          |                               FUNCTION                                |
  21          -----------------------------------------------------------------------*/
  22          
  23          #define MAIN_Fosc_Khz   11059.2                         //定义系统时钟频率(Khz)
  24          
  25          #define RELAY_1                 P10                                     //继电器定义见开发日志，高电平吸合
  26          #define RELAY_2                 P11
  27          #define RELAY_3                 P16
  28          #define RELAY_4                 P17
  29          
  30          #define Action_Signal   P37                                     //投切信号检测IO定义
  31          
  32          #define Phase_In_A              P32                                     //相序判断IO的定义
  33          #define Phase_In_B              P33
  34          //此处为寄存器与端口重定义
  35          #define ET2                             0x04
  36          #define ET3                             0x20
  37          #define ET4                             0x40
  38          
  39          
  40          u8              FLAG_Phase_Sequence     = 0;            //相序标志位：          1--A before B   2--B before A
  41          u8              FLAG_Switch_State               = 0;            //开关状态标志位：      0--未投入       1--已投入       默认初始状态为未投出
  42          
  43          extern  u8      G_KEY_VALUE;
  44          extern  u8      Timer0_ISRQ_Length_10;
  45          extern  u8      FLAG_EXTISource_0;
  46          extern  u8      FLAG_EXTISource_1;
  47          extern  u16 Timer2_Count;
  48          extern  u8      AB_Delat_Time_ms;
  49          extern  u8      AB_Delat_Time_EN;
  50          
  51          void Phase_A_before_B(void);
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 2   

  52          void Phase_B_before_A(void);
  53          void Switch_Put_In(void);
  54          void Switch_Cut_out(void);
  55          
  56          /**
  57            * @name    delay_100us
  58            * @brief   delay program,system in 11.0592Mhz
  59            * @param   None
  60            * @return  None
  61          ***/
  62          void delay_100us(void)
  63          {
  64   1          u8 a,b;
  65   1          for(a = 10; a > 0; a --)
  66   1          {
  67   2              for(b = 16; b > 0; b --);
  68   2          }
  69   1      }
  70          
  71          
  72          /**
  73            * @name    main
  74            * @brief   main program
  75            * @param   None
  76            * @return  None
  77          ***/
  78          void main(void)
  79          {
  80   1          //系统采用11.0592Mhz频率运行
  81   1          //delay_ms(1)实际延时为0.5ms
  82   1          //10为ADC最大值5V-1024
  83   1          u16 Timer2_Count_Temp = 0;
  84   1      
  85   1      
  86   1          STC8x_System_Init();
  87   1              
  88   1              if(FLAG_Switch_State)                                   //已经投入状态
  89   1              {
  90   2                      RELAY_1 = 1;
  91   2                      RELAY_2 = 0;
  92   2                      RELAY_3 = 1;
  93   2                      RELAY_4 = 0;
  94   2              }
  95   1              else                                                                    //切出状态
  96   1              {
  97   2                      RELAY_1 = 0;
  98   2                      RELAY_2 = 0;
  99   2                      RELAY_3 = 0;
 100   2                      RELAY_4 = 0;
 101   2              }
 102   1          //printf("Vin = %d\r\n",ADC_Get_Sample(ADC_Channel_P36_8G1K08_T,ADC_Acc_10Bits));
 103   1      
 104   1          /*继电器24V动作时间测试
 105   1          while(1)
 106   1          {
 107   1              switch(G_KEY_VALUE % 2)
 108   1              {
 109   1                      case 0:
 110   1                              RELAY_? = 0;
 111   1                              break;
 112   1                      case 1:
 113   1                              RELAY_? = 1;
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 3   

 114   1                              break;
 115   1              }
 116   1          }*/
 117   1              
 118   1          /*外部中断相序判断测试      EXTI0---B相---P32;EXTI1---A相---P33
 119   1          程序思路：
 120   1          T0-1ms中断的大前提下，如果检测某一相，开启标志位，
 121   1          T0开始计数，直到检测到另一相为止。
 122   1          printf("SYS INIT DONE!\r\n");
 123   1          while(1)
 124   1          {
 125   1              if((FLAG_EXTISource_0 + FLAG_EXTISource_1) == 2)
 126   1              {
 127   1                  printf("Delat Time is %bd ms\r\n",AB_Delat_Time_ms);
 128   1                  FLAG_EXTISource_0 = 0;
 129   1                      FLAG_EXTISource_1 = 0;
 130   1                      AB_Delat_Time_ms = 0;
 131   1      
 132   1                      while(1);
 133   1              }
 134   1          }
 135   1          */
 136   1          delay_ms(4);                                                        //等一会儿，为精准测相序做准备
 137   1          while(1)
 138   1          {
 139   2              AB_Delat_Time_EN = 1;                           //开启时间测量
 140   2              FLAG_EXTISource_1 = 0;
 141   2              while(!FLAG_EXTISource_1);
 142   2              FLAG_EXTISource_0 = 0;
 143   2              while(!FLAG_EXTISource_0);
 144   2              AB_Delat_Time_EN = 0;
 145   2              //printf("%bd ms\r\n",AB_Delat_Time_ms);
 146   2              if(AB_Delat_Time_ms < 10)
 147   2              {
 148   3                  FLAG_Phase_Sequence = 1;            //A before B 
 149   3                              printf("A before B\r\n");
 150   3                  break;
 151   3              }
 152   2              else if(AB_Delat_Time_ms < 20)
 153   2              {
 154   3                  FLAG_Phase_Sequence = 2;            //B before A
 155   3                              printf("B before A\r\n");
 156   3                              break;
 157   3              }
 158   2          }
 159   1          NVIC_EXTI0_Init(EXTI_Tri_Edge,NVIC_PR1,DISABLE);//相序测定完成关闭B相的外部中断
 160   1              while(1)
 161   1              {
 162   2                      if(FLAG_Phase_Sequence == 1)
 163   2                      {
 164   3                              Phase_A_before_B();
 165   3                      }
 166   2                      if(FLAG_Phase_Sequence == 2)
 167   2                      {
 168   3                              Phase_B_before_A();
 169   3                      }
 170   2              }
 171   1      }
 172          
 173          
 174          
 175          /**
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 4   

 176            * @name    Phase_A_before_B
 177            * @brief   Phase program
 178            * @param   测相序目的就是为了知道AB两相继电器闭合时间差
 179            * @return  None
 180          ***/
 181          void Phase_A_before_B(void)
 182          {
 183   1          //该投入
 184   1              //此处时序图为：https://zl279lj20w.feishu.cn/docs/doccnqrbTx3B8OoYRqgz93QZfkg# 8月6日图1
 185   1          if(!Action_Signal && !FLAG_Switch_State)
 186   1          {
 187   2              FLAG_EXTISource_1 = 0;
 188   2              while(!FLAG_EXTISource_1);                      //等待A相0点以此为原点
 189   2              
 190   2              delay_ms(14);                                           //K1A(SW4)闭合前等待(15-7.6=7.4)ms
 191   2              delay_100us();                                          
 192   2              delay_100us();                                          
 193   2              delay_100us();                                          
 194   2              delay_100us();                                          
 195   2              RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 196   2              delay_ms(26);                                           //K1B(SW2)闭合指令发出前等待(13.3)ms
 197   2              delay_100us();                                          
 198   2              delay_100us();                                          
 199   2              delay_100us();  
 200   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 201   2                      delay_ms(3);                                            //K1A(SW4)断开指令发出前等待1.5ms
 202   2              RELAY_4 = 0;                                            //K1A(SW4)断开指令发出
 203   2              delay_100us();                                          //K2A(SW3)闭合指令发出前等待0.4ms
 204   2              delay_100us();                                          
 205   2              delay_100us();                                          
 206   2              delay_100us();  
 207   2                      RELAY_3 = 1;                                            //K2A(SW3)闭合指令发出
 208   2                      delay_ms(25);                                           //K1B(SW2)断开指令发出前等待(13.3-0.4=12.9)ms
 209   2              delay_100us();                                          
 210   2              delay_100us();                                          
 211   2              delay_100us();                                          
 212   2              delay_100us();  
 213   2                      RELAY_2 = 0;                                            //K1B(SW2)断开指令发出
 214   2              delay_100us();                                          //K2B(SW1)闭合指令发出前等待0.4ms
 215   2              delay_100us();                                          
 216   2              delay_100us();                                          
 217   2              delay_100us();  
 218   2                      RELAY_1 = 1;                                            //K2B(SW1)闭合指令发出
 219   2                      
 220   2                      FLAG_Switch_State = 1;                                  //投入完成设置标志位    
 221   2          }
 222   1          //该切出,切出与投入时序完全一致，不同的仅为继电器动作不同
 223   1              //此处时序图为：https://zl279lj20w.feishu.cn/docs/doccnqrbTx3B8OoYRqgz93QZfkg# 8月6日图1
 224   1          if(Action_Signal && FLAG_Switch_State)
 225   1          {
 226   2              FLAG_EXTISource_1 = 0;
 227   2              while(!FLAG_EXTISource_1);                      //等待A相0点以此为原点
 228   2              
 229   2              delay_ms(14);                                           //K1A(SW4)闭合前等待(15-7.6=7.4)ms
 230   2              delay_100us();                                          
 231   2              delay_100us();                                          
 232   2              delay_100us();                                          
 233   2              delay_100us();                                          
 234   2              RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 235   2              delay_ms(26);                                           //K1B(SW2)闭合指令发出前等待(13.3)ms
 236   2              delay_100us();                                          
 237   2              delay_100us();                                          
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 5   

 238   2              delay_100us();  
 239   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 240   2                      delay_ms(3);                                            //K1A(SW4)断开指令发出前等待1.5ms
 241   2              RELAY_4 = 0;                                            //K1A(SW4)断开指令发出
 242   2              delay_100us();                                          //K2A(SW3)断开指令发出前等待0.4ms
 243   2              delay_100us();                                          
 244   2              delay_100us();                                          
 245   2              delay_100us();  
 246   2                      RELAY_3 = 0;                                            //K2A(SW3)断开指令发出
 247   2                      delay_ms(25);                                           //K1B(SW2)断开指令发出前等待(13.3-0.4=12.9)ms
 248   2              delay_100us();                                          
 249   2              delay_100us();                                          
 250   2              delay_100us();                                          
 251   2              delay_100us();  
 252   2                      RELAY_2 = 0;                                            //K1B(SW2)断开指令发出
 253   2              delay_100us();                                          //K2B(SW1)断开指令发出前等待0.4ms
 254   2              delay_100us();                                          
 255   2              delay_100us();                                          
 256   2              delay_100us();  
 257   2                      RELAY_1 = 0;                                            //K2B(SW1)断开指令发出
 258   2                      
 259   2                      FLAG_Switch_State = 0;                                  //切出完成设置标志位    
 260   2          }
 261   1      }
 262          
 263          /**
 264            * @name    Phase_B_before_A
 265            * @brief   Phase program
 266            * @param   None
 267            * @return  None
 268          ***/
 269          void Phase_B_before_A(void)
 270          {
 271   1          //该投入
 272   1              //此处时序图为：https://zl279lj20w.feishu.cn/docs/doccnqrbTx3B8OoYRqgz93QZfkg# 8月6日图2
 273   1          if(!Action_Signal && !FLAG_Switch_State)
 274   1          {
 275   2              FLAG_EXTISource_1 = 0;
 276   2              while(!FLAG_EXTISource_1);                      //等待A相0点以此为原点
 277   2                      
 278   2              delay_ms(14);                                           //K1A(SW4)闭合前等待(15-7.6=7.4)ms
 279   2              delay_100us();                                          
 280   2              delay_100us();                                          
 281   2              delay_100us();                                          
 282   2              delay_100us();                                          
 283   2              RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 284   2                      delay_ms(13);                                           //K1B(SW2)闭合指令发出前等(20/3=6.7)ms
 285   2              delay_100us();                                          
 286   2              delay_100us();                                          
 287   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 288   2                      delay_ms(16);                                           //K1A(SW4)闭合指令发出前等(5.9+2.2=8.1)ms
 289   2              delay_100us();                                          
 290   2                      RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 291   2              delay_100us();                                          //K2A(SW3)闭合指令发出前等(0.4)ms                               
 292   2              delay_100us();                                          
 293   2              delay_100us();                                          
 294   2              delay_100us();                                          
 295   2                      RELAY_3 = 1;                                            //K2A(SW3)闭合指令发出
 296   2                      delay_ms(8);                                            //K2B(SW1)闭合指令发出前等待(6.7-2.4=4.3)ms
 297   2              delay_100us();                                          
 298   2              delay_100us();                                          
 299   2              delay_100us();                                          
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 6   

 300   2                      RELAY_1 = 1;                                            //K2B(SW1)闭合指令发出
 301   2              delay_100us();                                          //K1B(SW2)闭合指令发出前等(0.4)ms                               
 302   2              delay_100us();                                          
 303   2              delay_100us();                                          
 304   2              delay_100us();                                          
 305   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 306   2          
 307   2                      FLAG_Switch_State = 1;                          //投入完成设置标志位    
 308   2              }
 309   1          //该切出,切出与投入时序完全一致，不同的仅为继电器动作不同
 310   1          if(Action_Signal && FLAG_Switch_State)
 311   1          {
 312   2              FLAG_EXTISource_1 = 0;
 313   2              while(!FLAG_EXTISource_1);                      //等待A相0点以此为原点
 314   2                      
 315   2              delay_ms(14);                                           //K1A(SW4)闭合前等待(15-7.6=7.4)ms
 316   2              delay_100us();                                          
 317   2              delay_100us();                                          
 318   2              delay_100us();                                          
 319   2              delay_100us();                                          
 320   2              RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 321   2                      delay_ms(13);                                           //K1B(SW2)闭合指令发出前等(20/3=6.7)ms
 322   2              delay_100us();                                          
 323   2              delay_100us();                                          
 324   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 325   2                      delay_ms(16);                                           //K1A(SW4)闭合指令发出前等(5.9+2.2=8.1)ms
 326   2              delay_100us();                                          
 327   2                      RELAY_4 = 1;                                            //K1A(SW4)闭合指令发出
 328   2              delay_100us();                                          //K2A(SW3)闭合指令发出前等(0.4)ms                               
 329   2              delay_100us();                                          
 330   2              delay_100us();                                          
 331   2              delay_100us();                                          
 332   2                      RELAY_3 = 0;                                            //K2A(SW3)闭合指令发出
 333   2                      delay_ms(8);                                            //K2B(SW1)闭合指令发出前等待(6.7-2.4=4.3)ms
 334   2              delay_100us();                                          
 335   2              delay_100us();                                          
 336   2              delay_100us();                                          
 337   2                      RELAY_1 = 0;                                            //K2B(SW1)闭合指令发出
 338   2              delay_100us();                                          //K1B(SW2)闭合指令发出前等(0.4)ms                               
 339   2              delay_100us();                                          
 340   2              delay_100us();                                          
 341   2              delay_100us();                                          
 342   2                      RELAY_2 = 1;                                            //K1B(SW2)闭合指令发出
 343   2          
 344   2                      FLAG_Switch_State = 0;                          //投入完成设置标志位    
 345   2          }
 346   1      }
 347          
 348          /*-----------------------------------------------------------------------
 349          |                   END OF FLIE.  (C) COPYRIGHT zeweni                  |
 350          -----------------------------------------------------------------------*/
 351          
 352          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    481    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =      2       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.01   MAIN                                                                  08/07/2021 09:31:09 PAGE 7   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
